#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

typedef uint8_t BYTE;

int main(int argc, char *argv[])
{

    if (argc != 2)
    {
        printf("Usage: ./recover FILE\n");
        return 1;
    }
    else
    {

        FILE *src = fopen(argv[1], "r");
        if (src == NULL)
        {
            fprintf(stderr, "Could not open %s.\n", argv[1]);
            return 1;
        }

        FILE *dst = NULL;   // pointer for jpeg file
        int jpeg_count = 0; // counter for no. of jpeg file found
        // Create a buffer for a block of data
        BYTE buffer[512];
        char jpeg_name[8] = {0}; // name as in convention

        while (fread(buffer, 512, 1, src) == 1)
        {
            if (buffer[0] == 0xff && buffer[1] == 0xd8 && buffer[2] == 0xff &&
                (buffer[3] & 0xf0) == 0xe0)
            { // If not first JPEG, close previous
                if (!(jpeg_count == 0))
                {
                    fclose(dst);
                }
                // open new file
                sprintf(jpeg_name, "%03d.jpg", jpeg_count);
                dst = fopen(jpeg_name, "w"); // open new jpeg name
                jpeg_count++;
            }

            if (dst != NULL)
            { // keep writing to jpeg file untill new jpeg is not found
                fwrite(buffer, 512, 1, dst); // bcz when found above if will be triggered
            }
        } // it is of loop

        // close last opened outptr
        fclose(dst);
        // close input file (forensic image)
        fclose(src);

        return 0;
    }
}
